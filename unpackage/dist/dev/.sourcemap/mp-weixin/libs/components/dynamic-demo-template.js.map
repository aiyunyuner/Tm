{"version":3,"sources":["webpack:///C:/Users/delta/Documents/HBuilderProjects/Tm/libs/components/dynamic-demo-template.vue?f0b0","webpack:///C:/Users/delta/Documents/HBuilderProjects/Tm/libs/components/dynamic-demo-template.vue?47c3","webpack:///C:/Users/delta/Documents/HBuilderProjects/Tm/libs/components/dynamic-demo-template.vue?29f7","webpack:///C:/Users/delta/Documents/HBuilderProjects/Tm/libs/components/dynamic-demo-template.vue?9986","uni-app:///libs/components/dynamic-demo-template.vue","webpack:///C:/Users/delta/Documents/HBuilderProjects/Tm/libs/components/dynamic-demo-template.vue?d392","webpack:///C:/Users/delta/Documents/HBuilderProjects/Tm/libs/components/dynamic-demo-template.vue?08fe"],"names":["name","props","sectionList","type","default","tips","full","customBar","fullWindowsScroll","noDemo","computed","tipsData","haveTips","multiMode","sectionModeList","data","tuniaoColorList","_sectionList","sectionModeListInfos","modeIndex","modeSwitchSliderStyle","width","left","showContentTips","sectionScrollViewStyle","height","btnsList","sectionIndex","sectionScrollFlag","watch","handler","deep","immediate","created","mounted","methods","initSectionScrollView","uni","success","updateSectionScrollView","getModeTabsInfo","view","setTimeout","res","modeSliderPosition","switchMode","index","demoTipsClick","initSectionBtns","value","change","section_item","item","updateSectionBtns","indexValue","updateSectionBtnsState","updateSectionBtnsValue","sectionBtnClick"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8I;AAC9I;AACyE;AACL;AACsC;;;AAG1G;AACyM;AACzM,gBAAgB,gNAAU;AAC1B,EAAE,2FAAM;AACR,EAAE,4GAAM;AACR,EAAE,qHAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,gHAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAgzB,CAAgB,8yBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBCgEp0B;EACAA;EACAC;IACA;IACAC;MACAC;MACAC;QACA;MACA;IACA;IACA;IACAC;MACAF;MACAC;IACA;IACA;IACAE;MACAH;MACAC;IACA;IACA;IACAG;MACAJ;MACAC;IACA;IACA;IACAI;MACAL;MACAC;IACA;IACA;IACAK;MACAN;MACAC;IACA;EACA;EACAM;IACAC;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;QACA;MACA;IACA;EACA;EACAC;IACA;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;QACAC;QACAC;MACA;MACA;MACAC;MACA;MACAC;QACAC;MACA;MACA;MACAC;MACA;MACAC;MACA;MACAC;IACA;EACA;EACAC;IACA3B;MACA4B;QACA;QACA;MACA;MACAC;IACA;IACAH;MACA;QACA;MACA;IACA;IACApB;MACAsB;QACA;UACA;QACA;MACA;MACAE;IACA;EACA;EACAC;IACA;IACA;MACA;QACAjC;MACA;IACA;IACA;IACA;EACA;EACAkC;IAAA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;MACA;MACA;MAEA;QACA;QACA;MACA;IACA;EACA;EACAC;IACA;IACAC;MAAA;MACA;MACA;QACA;MACA;MACA;MACAC;QACAC;UACA;UACA;UACA;YACAD;cACA;gBACA;cACA;gBACA;gBACA;gBACA;cACA;YACA;UACA;YACA;cACAA;gBACA;kBACA;gBACA;kBACA;kBACA;kBACA;gBACA;cACA;YACA;cACA;YACA;UACA;QAEA;MACA;IACA;IACA;IACAE;MAAA;MACA;QACA;MACA;IACA;IACA;IACAC;MAAA;MACA;MACA;QACAC;MACA;MACAA;QACA;QACA;UACAC;YACA;UACA;UACA;QACA;QACA;QACAC;UACA;QACA;QACA;QACA;;QAEA;QACA;MACA;IACA;IACA;IACAC;MAAA;MACA;MACA;MACA;QACA;MACA;MAEA;IACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;QACAC;MACA;IACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;MACA;QACA;UACA;YACAC;YACAC;UACA;QACA;UACA;QACA;MACA;MAEA;MACA;MACA;QACA;UACA;YACAC;UACA;UACA;QACA;QACAC;QACA;MACA;;MAEA;MACA;IACA;IACA;IACAC;MAAA;MAAA;MAAA;MACA;MACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;UACAC;QACA;QACA;UACAA;QACA;QACA;QACA;UAAAL;UAAAC;QAAA;QACAE;QACA;MACA;IACA;IACA;IACAG;MAAA;MAAA;MAAA;MACA;MACA;QACA;UACA;QACA;QACA5B;UAAA;QAAA;QACAA;UACA;UACA;QACA;MACA;QACA;UACA;QACA;QACA;QACA;QACA;MACA;IAEA;IACA;IACA6B;MAAA;MAAA;MAAA;MACA;QACA;MACA;MACA;MACA;QACAP;QACAC;MACA;IACA;IACA;IACAO;MACA;MACA;MACA;MACA;QAAAR;QAAAC;MAAA;MACA;QACAf;QACAW;QACA9C;MACA;IACA;EACA;AACA;AAAA,4B;;;;;;;;;;;;;AC9YA;AAAA;AAAA;AAAA;AAA2gD,CAAgB,i8CAAG,EAAC,C;;;;;;;;;;;ACA/hD;AACA,OAAO,KAAU,EAAE,kBAKd","file":"libs/components/dynamic-demo-template.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./dynamic-demo-template.vue?vue&type=template&id=59f5e4c0&scoped=true&\"\nvar renderjs\nimport script from \"./dynamic-demo-template.vue?vue&type=script&lang=js&\"\nexport * from \"./dynamic-demo-template.vue?vue&type=script&lang=js&\"\nimport style0 from \"./dynamic-demo-template.vue?vue&type=style&index=0&id=59f5e4c0&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"59f5e4c0\",\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"libs/components/dynamic-demo-template.vue\"\nexport default component.exports","export * from \"-!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--17-0!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./dynamic-demo-template.vue?vue&type=template&id=59f5e4c0&scoped=true&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var s0 = _vm.multiMode ? _vm.__get_style([_vm.modeSwitchSliderStyle]) : null\n  var s1 = _vm.__get_style([_vm.sectionScrollViewStyle])\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        s0: s0,\n        s1: s1,\n      },\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./dynamic-demo-template.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./dynamic-demo-template.vue?vue&type=script&lang=js&\"","<template>\r\n  <view class=\"dynamic-demo\">\r\n\r\n    <!-- 效果预览窗口 -->\r\n    <view v-if=\"!noDemo\" class=\"demo-container\" :class=\"{'demo-container--full': full}\">\r\n      <view class=\"demo\">\r\n        <slot></slot>\r\n      </view>\r\n      <!-- 提示信息 -->\r\n      <view v-if=\"haveTips\">\r\n        <view class=\"demo__tips__icon\" @click=\"demoTipsClick\">\r\n          <view class=\"icon tn-icon-help\"></view>\r\n        </view>\r\n        <view class=\"demo__tips__content\"\r\n          :class=\"[showContentTips ? 'demo__tips__content--show' : 'demo__tips__content--hide']\">\r\n          <view v-for=\"(item,index) in tipsData\" :key=\"index\" class=\"demo__tips__content--item\">{{ item }}</view>\r\n        </view>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 模式切换 -->\r\n    <view v-if=\"multiMode\" class=\"mode-switch\">\r\n      <view class=\"mode-switch__container\">\r\n        <view v-for=\"(item, index) in sectionModeListInfos\" :key=\"index\" class=\"mode-switch__item\"\r\n          :class=\"[`mode-switch-item-${index}`,{'mode-switch__item--active': modeIndex === index}]\"\r\n          @click=\"switchMode(index)\">{{ item.name }}</view>\r\n\r\n        <!-- 滑块样式 -->\r\n        <view class=\"mode-switch__slider\" :style=\"[modeSwitchSliderStyle]\"></view>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 组件对应可选项容器 -->\r\n    <view class=\"section-container\">\r\n      <scroll-view\r\n        class=\"section__scroll-view\"\r\n        :class=\"{'section__scroll-view--auto': sectionScrollViewStyle.height === 'auto'}\"\r\n        :style=\"[sectionScrollViewStyle]\"\r\n        :scroll-y=\"sectionScrollViewStyle.height !== 'auto'\"\r\n      >\r\n        <block v-for=\"(item,index) in btnsList\" :key=\"index\">\r\n          <view class=\"section__content\" :class=\"{'section__content--visible': item.show}\">\r\n            <view class=\"section__content__title\">\r\n              <view class=\"section__content__title__left-line\" :class=\"[`tn-main-gradient-${tuniaoColorList[index]}`]\"></view>\r\n              <view class=\"section__content__title--text tn-text-ellipsis\" :class=\"[`tn-main-gradient-${tuniaoColorList[index]}`]\">{{ item.title }}</view>\r\n              <view class=\"section__content__title__right-line\" :class=\"[`tn-main-gradient-${tuniaoColorList[index]}`]\"></view>\r\n            </view>\r\n            <view class=\"section__content__btns\">\r\n              <view v-for=\"(section_btn,section_index) in item.optional\" :key=\"section_index\"\r\n                class=\"section__content__btns__item\" :class=\"[`tn-main-gradient-${tuniaoColorList[index]}--light`]\" @click=\"sectionBtnClick(index, section_index)\">\r\n                <view class=\"section__content__btns__item__bg\"\r\n                  :class=\"[`tn-main-gradient-${tuniaoColorList[index]}`, {'section__content__btns__item__bg--active':sectionIndex[modeIndex][index]['value'] === section_index}]\"></view>\r\n                <view class=\"section__content__btns__item--text tn-text-ellipsis\"\r\n                  :class=\"[sectionIndex[modeIndex][index]['value'] === section_index ? 'section__content__btns__item--text--active' : `tn-color-${tuniaoColorList[index]}`]\">{{ section_btn }}</view>\r\n              </view>\r\n            </view>\r\n          </view>\r\n        </block>\r\n      </scroll-view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'dynamic-demo-template',\r\n    props: {\r\n      // 可选项列表数据\r\n      sectionList: {\r\n        type: Array,\r\n        default() {\r\n          return []\r\n        }\r\n      },\r\n      // 提示信息\r\n      tips: {\r\n        type: [String, Array],\r\n        default: ''\r\n      },\r\n      // 演示框的内容是否为铺满\r\n      full: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      // 是否使用了自定义顶部导航栏\r\n      customBar: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n      // 是否全屏滚动\r\n      fullWindowsScroll: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      // 没有演示内容\r\n      noDemo: {\r\n        type: Boolean,\r\n        default: false\r\n      }\r\n    },\r\n    computed: {\r\n      tipsData() {\r\n        if (typeof this.tips === 'string') {\r\n          return [this.tips]\r\n        }\r\n        return this.tips\r\n      },\r\n      haveTips() {\r\n        return this.tips && this.tips.length > 0\r\n      },\r\n      multiMode() {\r\n        return this.sectionList.length > 1\r\n      },\r\n      sectionModeList() {\r\n        return this.sectionList.map((item) => {\r\n          return item.name\r\n        })\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        // 图鸟颜色列表\r\n        tuniaoColorList: this.$tn.color.getTuniaoColorList(),\r\n        // 保存选项列表信息（由于prop中的数据时不能被修改的）\r\n        _sectionList: [],\r\n        // 模式列表信息\r\n        sectionModeListInfos: [],\r\n        // 所选模式的序号\r\n        modeIndex: 0,\r\n        // 模式选择滑块样式\r\n        modeSwitchSliderStyle: {\r\n          width: 0,\r\n          left: 0\r\n        },\r\n        // 显示组件相关提示信息\r\n        showContentTips: false,\r\n        // 可选项滚动容器样式\r\n        sectionScrollViewStyle: {\r\n          height: 0\r\n        },\r\n        // 按钮列表信息\r\n        btnsList: [],\r\n        // 标记当前所选按钮\r\n        sectionIndex: [],\r\n        // 标记选项按钮是否可以滑动（使用scroll-view进行包裹）\r\n        sectionScrollFlag: true\r\n      }\r\n    },\r\n    watch: {\r\n      sectionList: {\r\n        handler(value) {\r\n          // 如果sectionList发生改变，重新初始化选项列表信息\r\n          this.initSectionBtns()\r\n        },\r\n        deep: true\r\n      },\r\n      sectionScrollFlag(value) {\r\n        if (!value) {\r\n          this.sectionScrollViewStyle.height = 'auto'\r\n        }\r\n      },\r\n      fullWindowsScroll: {\r\n        handler(value) {\r\n          if (value) {\r\n            this.sectionScrollViewStyle.height = 'auto'\r\n          }\r\n        },\r\n        immediate: true\r\n      }\r\n    },\r\n    created() {\r\n      // 初始化可选项模式列表\r\n      this.sectionModeListInfos = this.sectionModeList.map((item) => {\r\n        return {\r\n          name: item\r\n        }\r\n      })\r\n      // 初始化选项按钮默认信息\r\n      this.initSectionBtns()\r\n    },\r\n    mounted() {\r\n      // 等待加载组件完成\r\n      // setTimeout(() => {\r\n      //   // 计算出底部scroll-view的高度\r\n      //   this.initSectionScrollView()\r\n\r\n      //   if (this.multiMode) {\r\n      //     // 获取模式切换标签的信息\r\n      //     this.getModeTabsInfo()\r\n      //   }\r\n      // }, 10)\r\n      this.$nextTick(() => {\r\n        // 计算出底部scroll-view的高度\r\n        this.initSectionScrollView()\r\n        \r\n        if (this.multiMode) {\r\n          // 获取模式切换标签的信息\r\n          this.getModeTabsInfo()\r\n        }\r\n      })\r\n    },\r\n    methods: {\r\n      // 初始化选项滑动窗口的高度\r\n      initSectionScrollView() {\r\n        // 全屏滚动时不进行任何的操作\r\n        if (this.fullWindowsScroll) {\r\n          return\r\n        }\r\n        // 获取屏幕的高度\r\n        uni.getSystemInfo({\r\n          success: (systemInfo) => {\r\n            // 通过当前屏幕的安全高度减去上一个元素的底部和距离上一个元素的外边距，然后减获取到的值减去标题栏的高度即可\r\n            const navBarHeight = this.customBar ? 0 : this.vuex_custom_bar_height\r\n            if (this.multiMode) {\r\n              uni.createSelectorQuery().in(this).select('.mode-switch').boundingClientRect(data => {\r\n                if (data.bottom >= systemInfo.safeArea.height) {\r\n                  this.sectionScrollFlag = false\r\n                } else {\r\n                  this.sectionScrollFlag = true\r\n                  const containerBaseHeight = systemInfo.safeArea.height - data.bottom\r\n                  this.sectionScrollViewStyle.height = (containerBaseHeight - navBarHeight) + systemInfo.statusBarHeight - uni.upx2px(75) + 'px'\r\n                }\r\n              }).exec()\r\n            } else {\r\n              if (!this.noDemo) {\r\n                uni.createSelectorQuery().in(this).select('.demo-container').boundingClientRect(data => {\r\n                  if (data.bottom >= systemInfo.safeArea.height) {\r\n                    this.sectionScrollFlag = false\r\n                  } else {\r\n                    this.sectionScrollFlag = true\r\n                    const containerBaseHeight = systemInfo.safeArea.height - data.bottom\r\n                    this.sectionScrollViewStyle.height = (containerBaseHeight - navBarHeight) + systemInfo.statusBarHeight - uni.upx2px(75) + 'px'\r\n                  }\r\n                }).exec()\r\n              } else {\r\n                this.sectionScrollFlag = false\r\n              }\r\n            }\r\n            \r\n          }\r\n        })\r\n      },\r\n      // 更新选项滑动容器的高度\r\n      updateSectionScrollView() {\r\n        this.$nextTick(() => {\r\n          this.initSectionScrollView()\r\n        })\r\n      },\r\n      // 获取各个模式tab的节点信息\r\n      getModeTabsInfo() {\r\n        let view = uni.createSelectorQuery().in(this)\r\n        for (let i = 0; i < this.sectionModeListInfos.length; i++) {\r\n          view.select('.mode-switch-item-' + i).boundingClientRect()\r\n        }\r\n        view.exec(res => {\r\n          // 如果没有获取到，则重新获取\r\n          if (!res.length) {\r\n            setTimeout(() => {\r\n              this.getModeTabsInfo()\r\n            }, 10)\r\n            return\r\n          }\r\n          // 将每个模式的宽度放入list中\r\n          res.map((item, index) => {\r\n            this.sectionModeListInfos[index].width = item.width\r\n          })\r\n          // 初始化滑块的宽度\r\n          this.modeSwitchSliderStyle.width = this.sectionModeListInfos[0].width + 'px'\r\n\r\n          // 初始化滑块的位置\r\n          this.modeSliderPosition()\r\n        })\r\n      },\r\n      // 设置模式滑块的位置\r\n      modeSliderPosition() {\r\n        let left = 0\r\n        // 计算当前所选模式选项到组件左边的距离\r\n        this.sectionModeListInfos.map((item, index) => {\r\n          if (index < this.modeIndex) left += item.width\r\n        })\r\n\r\n        this.modeSwitchSliderStyle.left = left + 'px'\r\n      },\r\n      // 切换模式\r\n      switchMode(index) {\r\n        // 不允许点击当前激活的选项\r\n        if (index === this.modeIndex) return\r\n        this.modeIndex = index\r\n        this.modeSliderPosition()\r\n        this.updateSectionBtns()\r\n        this.$emit('modeClick', {\r\n          index: index\r\n        })\r\n      },\r\n      // 点击内容提示信息\r\n      demoTipsClick() {\r\n        this.showContentTips = !this.showContentTips\r\n      },\r\n      // 初始化被选中选项按钮\r\n      initSectionBtns() {\r\n        this.sectionIndex = []\r\n        this.sectionIndex = this.sectionList.map((item) => {\r\n          if (item.hasOwnProperty('section') && item.section.length > 0) {\r\n            return Array(item.section.length).fill({\r\n              value: 0,\r\n              change: false\r\n            })\r\n          } else {\r\n            return []\r\n          }\r\n        })\r\n        \r\n        this._sectionList = this.$tn.deepClone(this.sectionList)\r\n        // 给本地选项按钮列表给默认show属性\r\n        this._sectionList.map((item) => {\r\n          const section = item.section.map((section_item) => {\r\n            if (!section_item.hasOwnProperty('show')) {\r\n              section_item.show = true\r\n            }\r\n            return section_item\r\n          })\r\n          item.section = section\r\n          return item\r\n        })\r\n        \r\n        // 更新按钮信息\r\n        this.updateSectionBtns()\r\n      },\r\n      // 跟新选项按钮信息\r\n      updateSectionBtns(sectionIndex = -1, showState = true) {\r\n        let sectionOptional = this._sectionList[this.modeIndex]['section']\r\n        this.btnsList = sectionOptional.map((item, index) => {\r\n          // 判断是否已经修改了对应的值\r\n          let changeValue = this.sectionIndex[this.modeIndex][index]['change'] || false\r\n          let currentSectionIndexValue = this.sectionIndex[this.modeIndex][index]['value'] || 0\r\n          // 取出默认值(如果是已经修改过的选项，则使用之前的选项信息)\r\n          let indexValue = changeValue ? currentSectionIndexValue : item.hasOwnProperty('current') ? item.current : 0\r\n          // 取出是否显示当前选项\r\n          let show = (sectionIndex !== -1 && sectionIndex === index) ? showState : item.hasOwnProperty('show') ? item.show : true\r\n          // 处理最大最小值\r\n          if (indexValue < 0) {\r\n            indexValue = 0\r\n          }\r\n          if (indexValue >= item.optional.length) {\r\n            indexValue = item.optional.length\r\n          }\r\n          // this.sectionIndex[this.modeIndex][index]['value'] = indexValue\r\n          this.$set(this.sectionIndex[this.modeIndex], index, {value: indexValue, change: changeValue})\r\n          item.show = show\r\n          return item\r\n        })\r\n      },\r\n      // 更新选项按钮状态信息\r\n      updateSectionBtnsState(sectionIndex = -1, showState = true) {\r\n        // 判断sectionIndex是否为数组\r\n        if (this.$tn.array.isArray(sectionIndex)) {\r\n          if (sectionIndex.length === 0) {\r\n            return\r\n          }\r\n          sectionIndex = sectionIndex.filter((item) => item >= 0 && item < this.sectionList[this.modeIndex]['section'].length)\r\n          sectionIndex.map((item) => {\r\n            this.btnsList[item]['show'] = showState\r\n            this._sectionList[this.modeIndex]['section'][item]['show'] = showState\r\n          })\r\n        } else {\r\n          if (sectionIndex < 0 || sectionIndex >= this.sectionList[this.modeIndex]['section'].length) {\r\n            return\r\n          }\r\n          // 将按键的对应显示状态设置为对应的状态\r\n          this.btnsList[sectionIndex]['show'] = showState\r\n          this._sectionList[this.modeIndex]['section'][sectionIndex]['show'] = showState\r\n        }\r\n        \r\n      },\r\n      // 更新选项按钮选中信息\r\n      updateSectionBtnsValue(modeIndex = 0, sectionIndex = -1, value = 0) {\r\n        if (sectionIndex < 0 || sectionIndex >= this.sectionList[modeIndex]['section'].length) {\r\n          return\r\n        }\r\n        // 如果showState为false则移除对应的选项按钮，否则往对应的位置添加上对应的选项按钮\r\n        this.sectionIndex[modeIndex][sectionIndex] = {\r\n          value,\r\n          change: true\r\n        }\r\n      },\r\n      // 选项按钮点击事件\r\n      sectionBtnClick(index, sectionIndex) {\r\n        // if (this.sectionIndex[this.modeIndex][index] === sectionIndex) {\r\n        //   return\r\n        // }\r\n        this.$set(this.sectionIndex[this.modeIndex], index, {value: sectionIndex, change: true})\r\n        this.$emit('click', {\r\n          methods: this.btnsList[index]['methods'],\r\n          index: sectionIndex,\r\n          name: this.btnsList[index]['optional'][sectionIndex]\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .dynamic-demo {\r\n    padding-top: 78rpx;\r\n\r\n    /* 顶部模式切换start */\r\n    .mode-switch {\r\n      width: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      margin-top: 75rpx;\r\n      padding: 0 30rpx;\r\n\r\n      &__container {\r\n        position: relative;\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        width: 476rpx;\r\n        height: 62rpx;\r\n        background-color: #FFFFFF;\r\n        box-shadow: 0rpx 10rpx 50rpx 0rpx rgba(0, 3, 72, 0.1);\r\n        border-radius: 31rpx;\r\n      }\r\n\r\n      &__item {\r\n        flex: 1;\r\n        height: 62rpx;\r\n        width: 100%;\r\n        line-height: 62rpx;\r\n        text-align: center;\r\n        font-size: 28rpx;\r\n        color: $tn-font-sub-color;\r\n        z-index: 2;\r\n        transition: all 0.3s;\r\n\r\n        &--active {\r\n          color: #FFFFFF;\r\n          font-weight: bold;\r\n        }\r\n      }\r\n\r\n      &__slider {\r\n        position: absolute;\r\n        height: 62rpx;\r\n        border-radius: 31rpx;\r\n        // background-image: linear-gradient(-86deg, #FF8359 0%, #FFDF40 100%);\r\n        background-image: linear-gradient(-86deg, #00C3FF 0%, #58FFF5 100%);\r\n        box-shadow: 1rpx 10rpx 24rpx 0rpx #00C3FF77;\r\n        z-index: 1;\r\n        transition: all 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);\r\n      }\r\n    }\r\n\r\n    /* 顶部模式切换end */\r\n\r\n    /* 演示内容展示start */\r\n    .demo-container {\r\n      min-height: 327rpx;\r\n      width: calc(100% - 60rpx);\r\n      background-color: #FFFFFF;\r\n      box-shadow: 0rpx 10rpx 50rpx 0rpx rgba(0, 3, 72, 0.1);\r\n      margin: 0 30rpx 5rpx 30rpx;\r\n      border-radius: 20rpx;\r\n      position: relative;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      &--full {\r\n        display: inline-block;\r\n        padding-bottom: 20rpx;\r\n        min-height: 0rpx;\r\n        padding: 10rpx 20rpx 30rpx;\r\n      }\r\n\r\n      .demo {\r\n        padding-top: 70rpx;\r\n\r\n        &__tips {\r\n          &__icon {\r\n            position: absolute;\r\n            top: 20rpx;\r\n            right: 16rpx;\r\n            width: 39rpx;\r\n            height: 39rpx;\r\n            line-height: 39rpx;\r\n            font-size: 39rpx;\r\n\r\n            .icon {\r\n              background: linear-gradient(-45deg, #FF8359 0%, #FFDF40 100%);\r\n              -webkit-background-clip: text;\r\n              color: transparent;\r\n              text-shadow: 0rpx 10rpx 10rpx rgba(255, 156, 82, 0.2);\r\n            }\r\n          }\r\n\r\n          &__content {\r\n            position: absolute;\r\n            top: 65rpx;\r\n            right: 16rpx;\r\n            font-size: 20rpx;\r\n            margin-left: 20rpx;\r\n            word-wrap: normal;\r\n            display: flex;\r\n            flex-direction: column;\r\n            background-color: #E6E6E6;\r\n            padding: 20rpx;\r\n            border-radius: 10rpx;\r\n            transition: transform 0.3s cubic-bezier(0.68, -0.55, 0.265, 1);\r\n            transform-origin: 0 0;\r\n            z-index: 999999;\r\n\r\n            &--hide {\r\n              transform: scaleY(0);\r\n            }\r\n\r\n            &--show {\r\n              transform: scaleY(100%);\r\n\r\n              &::after {\r\n                content: \"\";\r\n                width: 0px;\r\n                height: 0px;\r\n                border-width: 4px;\r\n                border-style: solid;\r\n                border-color: transparent transparent rgba(149, 149, 149, 0.1) transparent;\r\n                position: absolute;\r\n                top: -8px;\r\n                right: 6px;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /* 演示内容展示end */\r\n\r\n    /* 可选项start */\r\n    .section-container {\r\n      width: 100%;\r\n      height: auto;\r\n      margin-top: 70rpx;\r\n\r\n      .section {\r\n        &__content {\r\n          margin-top: 70rpx;\r\n          display: none;\r\n          \r\n          &--visible {\r\n            display: block;\r\n            \r\n            &:last-child {\r\n              padding-bottom: calc(70rpx + env(safe-area-inset-bottom));\r\n            }\r\n          }\r\n\r\n          &:nth-child(1) {\r\n            margin-top: 0rpx;\r\n          }\r\n\r\n          &__title {\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            margin: 0 30rpx;\r\n            text-align: center;\r\n\r\n            &__left-line,\r\n            &__right-line {\r\n\r\n              width: 100rpx;\r\n              height: 2rpx;\r\n              position: relative;\r\n            }\r\n\r\n            &__left-line {\r\n              &::after {\r\n                content: '';\r\n                background: inherit;\r\n                width: 12rpx;\r\n                height: 12rpx;\r\n                position: absolute;\r\n                top: -12rpx;\r\n                right: 0rpx;\r\n                border-radius: 50%;\r\n                transform: translateY(50%);\r\n              }\r\n            }\r\n\r\n            &__right-line {\r\n              &::after {\r\n                content: '';\r\n                background: inherit;\r\n                width: 12rpx;\r\n                height: 12rpx;\r\n                position: absolute;\r\n                top: -12rpx;\r\n                left: 0rpx;\r\n                border-radius: 50%;\r\n                transform: translateY(50%);\r\n              }\r\n            }\r\n\r\n            &--text {\r\n              -webkit-background-clip: text;\r\n              color: transparent;\r\n              min-width: 124rpx;\r\n              height: 30rpx;\r\n              font-size: 32rpx;\r\n              line-height: 1;\r\n              margin: 0 35rpx;\r\n            }\r\n          }\r\n\r\n          &__btns {\r\n            width: calc(100% - 60rpx);\r\n            margin: 0 30rpx;\r\n            margin-top: 29rpx;\r\n            padding: 50rpx 30rpx 0rpx 0rpx;\r\n            background-color: #FFFFFF;\r\n            box-shadow: 0rpx 10rpx 50rpx 0rpx rgba(0, 3, 72, 0.1);\r\n            border-radius: 20rpx;\r\n            display: flex;\r\n            flex-direction: row;\r\n            align-items: center;\r\n            justify-content: flex-start;\r\n            flex-wrap: wrap;\r\n\r\n            &__item {\r\n              max-width: 30%;\r\n              padding: 17rpx 36rpx;\r\n              border-radius: 10rpx;\r\n              margin-bottom: 40rpx;\r\n              margin-left: 40rpx;\r\n              position: relative;\r\n              z-index: 1;\r\n\r\n              // &::before {\r\n              //   content: \" \";\r\n              //   position: absolute;\r\n              //   top: 10rpx;\r\n              //   left: 1rpx;\r\n              //   width: 100%;\r\n              //   height: 100%;\r\n              //   background: inherit;\r\n              //   filter: blur(24rpx);\r\n              //   opacity: 1;\r\n              //   z-index: -1;\r\n              // }\r\n\r\n              &__bg {\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                width: 100%;\r\n                height: 100%;\r\n                border-radius: inherit;\r\n                z-index: -1;\r\n                opacity: 0;\r\n                transform: scale(0);\r\n                transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);\r\n\r\n                &--active {\r\n                  opacity: 1;\r\n                  transform: scale(1);\r\n                }\r\n              }\r\n\r\n              &--text {\r\n                font-size: 24rpx;\r\n                line-height: 1.2em;\r\n                transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);\r\n                \r\n                &--active {\r\n                  color: #FFFFFF;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /* 可选项end */\r\n  }\r\n</style>\r\n","import mod from \"-!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-2!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-5!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./dynamic-demo-template.vue?vue&type=style&index=0&id=59f5e4c0&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-2!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-5!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./dynamic-demo-template.vue?vue&type=style&index=0&id=59f5e4c0&lang=scss&scoped=true&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1679126216110\n      var cssReload = require(\"C:/Users/delta/Downloads/HBuilderX.3.7.3.20230223/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}